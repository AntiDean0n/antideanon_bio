// –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç—ã DOM
const navButtons = document.querySelectorAll('nav button');
const sections = {};
document.querySelectorAll('section').forEach(section => {
  sections[section.id] = section;
});
const logOutput = document.getElementById('log-output');
const commandInput = document.getElementById('command-input');
const musicBox = document.getElementById('music-box');
const bgMusic = document.getElementById('bg-music');
const musicIcon = document.getElementById('music-icon');

// --- –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è OSINT ---
let currentOsintMode = ''; // 'phone' –∏–ª–∏ 'ip'
const osintInputArea = document.getElementById('osint-input-area');
const osintInput = document.getElementById('osint-input');
const osintSubmitBtn = document.getElementById('osint-submit-btn');
const osintResults = document.getElementById('osint-results');
const osintPhoneBtn = document.getElementById('search-phone-btn');
const osintIpBtn = document.getElementById('search-ip-btn');

// –í–ê–ñ–ù–û: –í–∞—à API –∫–ª—é—á NumVerify.
// –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ CORS-–ø—Ä–æ–∫—Å–∏, —ç—Ç–æ—Ç –∫–ª—é—á –≤—Å—ë –µ—â—ë –≤–∏–¥–µ–Ω –≤ –∫–æ–¥–µ –±—Ä–∞—É–∑–µ—Ä–∞.
const NUMVERIFY_API_KEY = 'b1a2969c8ecb83a7f0d6d2ca159e6819';

// --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ ---
function isValidPhoneNumber(input) {
  // –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è: –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å '+' –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã, –¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã –Ω–æ–º–µ—Ä–∞.
  // –ú–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –±–æ–ª–µ–µ —Å—Ç—Ä–æ–≥—É—é —Ä–µ–≥—É–ª—è—Ä–∫—É, –Ω–æ –¥–ª—è –Ω–∞—á–∞–ª–∞ —ç—Ç–æ–≥–æ —Ö–≤–∞—Ç–∏—Ç.
  return /^\+[0-9\s-()]{7,25}$/.test(input);
}

function isValidIpAddress(input) {
  // –í–∞–ª–∏–¥–∞—Ü–∏—è IPv4 (–ø—Ä–æ—Å—Ç–∞—è)
  const ipv4Regex = /^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$/;
  if (ipv4Regex.test(input)) {
    return input.split('.').every(segment => parseInt(segment, 10) >= 0 && parseInt(segment, 10) <= 255);
  }
  // –í–∞–ª–∏–¥–∞—Ü–∏—è IPv6 (–æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–∞—è, –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å)
  const ipv6Regex = /^[0-9a-fA-F:\.]{2,45}$/; // –ë–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–∏–º–≤–æ–ª—ã IPv6
  return ipv6Regex.test(input);
}

// --- –§—É–Ω–∫—Ü–∏–∏ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –∏ –ª–æ–≥–∏–∫–∏ ---

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –≤ –ª–æ–≥
function outputToTerminal(text) {
  const span = document.createElement('span');
  span.textContent = `[${new Date().toLocaleTimeString()}] ${text}`;
  logOutput.appendChild(span);
  logOutput.scrollTop = logOutput.scrollHeight; // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–Ω–∏–∑
}

// –≠—Ñ—Ñ–µ–∫—Ç –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞
function typeEffect(element, text, cursorElement, delay = 50) {
  element.textContent = ''; // –û—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–¥ –Ω–∞–±–æ—Ä–æ–º
  if (cursorElement) cursorElement.style.display = 'inline-block'; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—É—Ä—Å–æ—Ä
  let i = 0;
  const type = () => {
    if (i < text.length) {
      element.textContent += text.charAt(i);
      i++;
      setTimeout(type, delay);
    } else {
      if (cursorElement) cursorElement.style.display = 'none'; // –°–∫—Ä—ã–≤–∞–µ–º –∫—É—Ä—Å–æ—Ä –ø–æ—Å–ª–µ –Ω–∞–±–æ—Ä–∞
    }
  };
  type();
}

// –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å–µ–∫—Ü–∏–π
function showSection(id) {
  // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Å–µ–∫—Ü–∏–∏
  Object.values(sections).forEach(section => {
    section.classList.remove('active-section');
    section.style.position = 'absolute'; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è
    section.style.visibility = 'hidden';
  });

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å–µ–∫—Ü–∏—é
  const targetSection = sections[id];
  if (targetSection) {
    targetSection.classList.add('active-section');
    targetSection.style.position = 'static'; // –î–µ–ª–∞–µ–º —Å—Ç–∞—Ç–∏—á–Ω–æ–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    targetSection.style.visibility = 'visible';

    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∫–Ω–æ–ø–∫—É –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    navButtons.forEach(btn => btn.classList.remove('active'));
    document.querySelector(`nav button[data-target="${id}"]`).classList.add('active');

    // –ï—Å–ª–∏ —Å–µ–∫—Ü–∏—è –Ω–µ 'main', –∑–∞–ø—É—Å–∫–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞
    if (id !== 'main') {
      const preElement = targetSection.querySelector('pre[data-typed-text]');
      const cursorElement = targetSection.querySelector('.typed-cursor');
      if (preElement && cursorElement && id !== 'osint') {
        // –î–ª—è –≤—Å–µ—Ö, –∫—Ä–æ–º–µ OSINT, –∑–∞–ø—É—Å–∫–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç –ø–µ—á–∞—Ç–∏
        typeEffect(preElement, preElement.getAttribute('data-typed-text'), cursorElement);
      } else if (id === 'osint') {
        // –î–ª—è OSINT —Å–µ–∫—Ü–∏–∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        currentOsintMode = ''; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º
        osintInput.placeholder = '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–æ–∏—Å–∫–∞'; // –û–±—â–∏–π –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä
        osintResults.textContent = `
–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–æ–∏—Å–∫–∞ –∏ –≤–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.
–ù–∞–ø—Ä–∏–º–µ—Ä:
  –î–ª—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞: +1234567890
  –î–ª—è IP-–∞–¥—Ä–µ—Å–∞: 8.8.8.8
        `; // –ù–∞—á–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç
        osintInput.value = ''; // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
        osintInputArea.style.display = 'flex'; // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –≤–∏–¥–Ω–æ

        // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —Å—Ç–∏–ª–∏ —Å –∫–Ω–æ–ø–æ–∫ OSINT
        osintPhoneBtn.classList.remove('active');
        osintIpBtn.classList.remove('active');
      }
    } else {
      // –î–ª—è 'main' —Å–µ–∫—Ü–∏–∏ —Å–∫—Ä—ã–≤–∞–µ–º –∫—É—Ä—Å–æ—Ä
      const mainCursor = sections.main.querySelector('.typed-cursor');
      if (mainCursor) mainCursor.style.display = 'none';
    }

    outputToTerminal(`–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–µ–∫—Ü–∏–∏: ${id}`);
  }
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∑–≤—É–∫–∞
function toggleSound() {
  if (bgMusic.paused) {
    bgMusic.play().then(() => {
      musicIcon.textContent = 'üîä';
      outputToTerminal('–ú—É–∑—ã–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞.');
    }).catch(error => {
      console.error("–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –º—É–∑—ã–∫–∏:", error);
      outputToTerminal('–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –º—É–∑—ã–∫—É (–≤–æ–∑–º–æ–∂–Ω–æ, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –±—Ä–∞—É–∑–µ—Ä–æ–º).');
    });
  } else {
    bgMusic.pause();
    musicIcon.textContent = 'üîá';
    outputToTerminal('–ú—É–∑—ã–∫–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞.');
  }
}

// --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π ---

// –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
navButtons.forEach(button => {
  button.addEventListener('click', () => {
    showSection(button.dataset.target);
  });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞ –ø–æ–∏—Å–∫–∞ OSINT
osintPhoneBtn.addEventListener('click', () => {
  currentOsintMode = 'phone';
  osintInputArea.style.display = 'flex';
  osintInput.placeholder = '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, +1234567890)';
  osintResults.textContent = '';
  osintInput.value = '';
  outputToTerminal("–†–µ–∂–∏–º OSINT: –ü–æ–∏—Å–∫ –ø–æ –Ω–æ–º–µ—Ä—É. –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∏ –Ω–∞–∂–º–∏—Ç–µ –ò—Å–∫–∞—Ç—å.");

  // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã–º–∏ –∫–ª–∞—Å—Å–∞–º–∏ –∫–Ω–æ–ø–æ–∫
  osintPhoneBtn.classList.add('active');
  osintIpBtn.classList.remove('active');
});

osintIpBtn.addEventListener('click', () => {
  currentOsintMode = 'ip';
  osintInputArea.style.display = 'flex';
  osintInput.placeholder = '–í–≤–µ–¥–∏—Ç–µ IP-–∞–¥—Ä–µ—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä, 8.8.8.8)';
  osintResults.textContent = '';
  osintInput.value = '';
  outputToTerminal("–†–µ–∂–∏–º OSINT: –ü–æ–∏—Å–∫ –ø–æ IP. –í–≤–µ–¥–∏—Ç–µ IP –∏ –Ω–∞–∂–º–∏—Ç–µ –ò—Å–∫–∞—Ç—å.");

  // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã–º–∏ –∫–ª–∞—Å—Å–∞–º–∏ –∫–Ω–æ–ø–æ–∫
  osintIpBtn.classList.add('active');
  osintPhoneBtn.classList.remove('active');
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ò—Å–∫–∞—Ç—å"
osintSubmitBtn.addEventListener('click', () => {
  const query = osintInput.value.trim();
  if (!query) {
    outputToTerminal("–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞.");
    osintResults.textContent = "–û—à–∏–±–∫–∞: –í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞.";
    return;
  }
  performOsintSearch(query);
});


// –§—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞ OSINT —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º CORS-–ø—Ä–æ–∫—Å–∏ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π
async function performOsintSearch(query) {
  osintResults.textContent = '–ü–æ–∏—Å–∫...';
  outputToTerminal(`–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è OSINT –ø–æ–∏—Å–∫ –¥–ª—è: "${query}"...`);

  let apiUrl = '';
  let errorMessage = '–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø–æ–∏—Å–∫–∞.';

  if (currentOsintMode === 'phone') {
    if (!isValidPhoneNumber(query)) {
      osintResults.textContent = '–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: +1234567890.';
      outputToTerminal('–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞.');
      return;
    }
    const numverifyBaseUrl = `http://apilayer.net/api/validate?access_key=${NUMVERIFY_API_KEY}&number=${encodeURIComponent(query)}&country_code=&format=1`;
    apiUrl = `https://corsproxy.io/?${encodeURIComponent(numverifyBaseUrl)}`;
    errorMessage = '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –Ω–æ–º–µ—Ä–∞: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–æ–º–µ—Ä–∞ –∏–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–∞.';
  } else if (currentOsintMode === 'ip') {
    if (!isValidIpAddress(query)) {
      osintResults.textContent = '–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç IP-–∞–¥—Ä–µ—Å–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: 8.8.8.8 –∏–ª–∏ –≤–∞–ª–∏–¥–Ω—ã–π IPv6.';
      outputToTerminal('–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç IP-–∞–¥—Ä–µ—Å–∞.');
      return;
    }
    const ipApiBaseUrl = `http://ip-api.com/json/${encodeURIComponent(query)}?fields=status,message,query,country,countryCode,region,regionName,city,zip,lat,lon,timezone,offset,isp,org,as,asname,mobile,proxy,hosting`;
    apiUrl = `https://corsproxy.io/?${encodeURIComponent(ipApiBaseUrl)}`;
    errorMessage = '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ IP: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å IP –∏–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–∞.';
  } else {
    osintResults.textContent = '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –ø–æ–∏—Å–∫–∞ (–ø–æ –Ω–æ–º–µ—Ä—É –∏–ª–∏ –ø–æ IP).';
    outputToTerminal('–û—à–∏–±–∫–∞: –†–µ–∂–∏–º OSINT –Ω–µ –≤—ã–±—Ä–∞–Ω.');
    return;
  }

  try {
    const response = await fetch(apiUrl);
    if (!response.ok) {
      throw new Error(`HTTP error! Status: ${response.status}`);
    }
    const data = await response.json();
    displayOsintResults(data);
  } catch (error) {
    console.error('OSINT Search Error:', error);
    osintResults.textContent = `${errorMessage} (${error.message})`;
    outputToTerminal(`–û—à–∏–±–∫–∞ OSINT: ${errorMessage}`);
  }
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ OSINT
function displayOsintResults(data) {
  let resultText = '';
  if (currentOsintMode === 'phone') {
    if (data.valid) {
      resultText += `–°—Ç–∞—Ç—É—Å: ‚úÖ –í–∞–ª–∏–¥–Ω—ã–π –Ω–æ–º–µ—Ä\n`;
      resultText += `–ù–æ–º–µ—Ä: ${data.number || 'N/A'}\n`;
      resultText += `–õ–æ–∫–∞–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç: ${data.local_format || 'N/A'}\n`;
      resultText += `–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç: ${data.international_format || 'N/A'}\n`;
      resultText += `–°—Ç—Ä–∞–Ω–∞: ${data.country_name || 'N/A'} (${data.country_code || 'N/A'})\n`;
      if (data.location && data.location !== data.country_name) {
        resultText += `–†–µ–≥–∏–æ–Ω/–ì–æ—Ä–æ–¥: ${data.location || 'N/A'}\n`;
      }
      resultText += `–û–ø–µ—Ä–∞—Ç–æ—Ä: ${data.carrier || 'N/A'}\n`;
      resultText += `–¢–∏–ø –ª–∏–Ω–∏–∏: ${data.line_type || 'N/A'}\n`;
    } else {
      resultText += `–°—Ç–∞—Ç—É—Å: ‚ùå –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π –Ω–æ–º–µ—Ä –∏–ª–∏ –æ—à–∏–±–∫–∞ API.\n`;
      if (data.error) {
        resultText += `–ö–æ–¥ –æ—à–∏–±–∫–∏: ${data.error.code}\n`;
        resultText += `–°–æ–æ–±—â–µ–Ω–∏–µ: ${data.error.info}\n`;
      } else {
        resultText += `–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –Ω–æ–º–µ—Ä –Ω–µ –≤–∞–ª–∏–¥–µ–Ω.`;
      }
    }
  } else if (currentOsintMode === 'ip') {
    if (data.status === 'success') {
      resultText += `–°—Ç–∞—Ç—É—Å: ‚úÖ –£—Å–ø–µ—à–Ω–æ\n`;
      resultText += `IP-–∞–¥—Ä–µ—Å: ${data.query || 'N/A'}\n`;
      resultText += `–°—Ç—Ä–∞–Ω–∞: ${data.country || 'N/A'} (${data.countryCode || 'N/A'})\n`;
      resultText += `–†–µ–≥–∏–æ–Ω: ${data.regionName || 'N/A'} (${data.region || 'N/A'})\n`;
      resultText += `–ì–æ—Ä–æ–¥: ${data.city || 'N/A'}\n`;
      resultText += `–ü–æ—á—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å: ${data.zip || 'N/A'}\n`;
      resultText += `–®–∏—Ä–æ—Ç–∞/–î–æ–ª–≥–æ—Ç–∞: ${data.lat || 'N/A'}, ${data.lon || 'N/A'}\n`;
      resultText += `–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: ${data.timezone || 'N/A'}\n`;
      resultText += `ISP (–ü—Ä–æ–≤–∞–π–¥–µ—Ä): ${data.isp || 'N/A'}\n`;
      resultText += `–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: ${data.org || 'N/A'}\n`;
      resultText += `AS (–ê–≤—Ç–æ–Ω–æ–º–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞): ${data.as || 'N/A'} (${data.asname || 'N/A'})\n`;
      resultText += `–ú–æ–±–∏–ª—å–Ω–∞—è —Å–µ—Ç—å: ${data.mobile ? '–î–∞' : '–ù–µ—Ç'}\n`;
      resultText += `–ü—Ä–æ–∫—Å–∏/VPN: ${data.proxy ? '–î–∞' : '–ù–µ—Ç'}\n`;
      resultText += `–•–æ—Å—Ç–∏–Ω–≥: ${data.hosting ? '–î–∞' : '–ù–µ—Ç'}\n`;
    } else {
      resultText += `–°—Ç–∞—Ç—É—Å: ‚ùå ${data.message || '–û—à–∏–±–∫–∞'}\n`;
      resultText += `–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è IP-–∞–¥—Ä–µ—Å–∞.`;
    }
  }
  osintResults.textContent = resultText;
  outputToTerminal("OSINT –ø–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω.");
}


// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ (—Ñ—É—Ç–µ—Ä–∞)
commandInput.addEventListener('keydown', (e) => {
  if (e.key === 'Enter') {
    const command = commandInput.value.trim().toLowerCase();
    outputToTerminal(`> ${command}`);
    processCommand(command);
    commandInput.value = '';
  }
});

function processCommand(command) {
  const parts = command.split(' ');
  const cmd = parts[0];

  switch (cmd) {
    case 'help':
      outputToTerminal('–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:');
      outputToTerminal('  help - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥');
      outputToTerminal('  clear - –æ—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥');
      outputToTerminal('  goto [—Å–µ–∫—Ü–∏—è] - –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–µ–∫—Ü–∏–∏ (main, deffers, price, faq, osint, contact)');
      outputToTerminal('  set theme [green/red/default] - –∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ–º—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è');
      outputToTerminal('  play - –≤–∫–ª—é—á–∏—Ç—å –º—É–∑—ã–∫—É');
      outputToTerminal('  pause - –≤—ã–∫–ª—é—á–∏—Ç—å –º—É–∑—ã–∫—É');
      break;
    case 'clear':
      logOutput.innerHTML = '';
      outputToTerminal('–õ–æ–≥ –æ—á–∏—â–µ–Ω.');
      break;
    case 'goto':
      if (parts[1] && sections[parts[1]]) {
        showSection(parts[1]);
      } else {
        outputToTerminal('–ù–µ–≤–µ—Ä–Ω–∞—è —Å–µ–∫—Ü–∏—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: main, deffers, price, faq, osint, contact.');
      }
      break;
    case 'set':
      if (parts[1] === 'theme' && parts[2]) {
        document.body.classList.remove('theme-green', 'theme-red');
        if (parts[2] === 'green') {
          document.body.classList.add('theme-green');
          outputToTerminal('–¢–µ–º–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ –∑–µ–ª–µ–Ω—É—é.');
        } else if (parts[2] === 'red') {
          document.body.classList.add('theme-red');
          outputToTerminal('–¢–µ–º–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ –∫—Ä–∞—Å–Ω—É—é.');
        } else if (parts[2] === 'default') {
          outputToTerminal('–¢–µ–º–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é.');
        } else {
          outputToTerminal('–ù–µ–≤–µ—Ä–Ω–∞—è —Ç–µ–º–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: green, red, default.');
        }
      } else {
        outputToTerminal('–ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü—Ä–∏–º–µ—Ä: set theme green.');
      }
      break;
    case 'play':
      if (bgMusic.paused) {
        toggleSound();
      } else {
        outputToTerminal('–ú—É–∑—ã–∫–∞ —É–∂–µ –∏–≥—Ä–∞–µ—Ç.');
      }
      break;
    case 'pause':
      if (!bgMusic.paused) {
        toggleSound();
      } else {
        outputToTerminal('–ú—É–∑—ã–∫–∞ —É–∂–µ –Ω–∞ –ø–∞—É–∑–µ.');
      }
      break;
    default:
      outputToTerminal(`–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: "${command}". –í–≤–µ–¥–∏—Ç–µ 'help' –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.`);
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', () => {
  showSection('main'); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å–µ–∫—Ü–∏—é –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  outputToTerminal('–°–∏—Å—Ç–µ–º–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞. –í–≤–µ–¥–∏—Ç–µ "help" –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.');

  // –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º input area –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è OSINT —Å–µ–∫—Ü–∏–∏
  // –≠—Ç–æ —Å–¥–µ–ª–∞–Ω–æ –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ OSINT —Å–µ–∫—Ü–∏—é,
  // –æ–Ω–∞ –Ω–µ –∫–∞–∑–∞–ª–∞—Å—å –ø—É—Å—Ç–æ–π –¥–æ –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞.
  osintInputArea.style.display = 'flex';
  osintResults.textContent = `
–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–æ–∏—Å–∫–∞ –∏ –≤–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.
–ù–∞–ø—Ä–∏–º–µ—Ä:
  –î–ª—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞: +1234567890
  –î–ª—è IP-–∞–¥—Ä–µ—Å–∞: 8.8.8.8
  `;
});

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –º—É–∑—ã–∫–∏ (—Å —É—á–µ—Ç–æ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –±—Ä–∞—É–∑–µ—Ä–æ–≤)
// –ë—Ä–∞—É–∑–µ—Ä—ã –º–æ–≥—É—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å autoplay –±–µ–∑ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
// –ü–æ—ç—Ç–æ–º—É –ª—É—á—à–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–∫–ª—é—á–∏—Ç—å –º—É–∑—ã–∫—É.
// bgMusic.play().catch(e => console.log("Music autoplay blocked", e));
